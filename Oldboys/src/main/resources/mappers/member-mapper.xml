<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
	
	<select id="selectOne" parameterType="string" resultType="Member">
		SELECT * FROM MEMBER
		WHERE USERID = #{userId}
	</select>
	
	<select id="selectListMember" parameterType="Member" resultType="Member">
		SELECT * FROM MEMBER
		WHERE USERID = #{userId}
	</select>
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER VALUES
		(MEMBER_USERNO.NEXTVAL, #{userId}, #{password}, #{regNo}, #{businessName},
		#{phone}, #{name}, #{gender}, #{age}, #{email}, #{address1}, #{address2}, #{status})
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER 
		<set>
			PASSWORD = #{password},
			PHONE = #{phone},
			GENDER = #{gender},
			AGE = #{age},
			EMAIL = #{email},
			ADDRESS1 = #{address1},
			ADDRESS2 = #{address2}
		</set>
		WHERE USERID = #{userId}
	</update>
	
	<delete id="deleteMember" parameterType="Member">
		DELETE FROM MEMBER
		WHERE USERID = #{userId}
	</delete>
	
		<select id="checkIdDuplicate" parameterType="hashmap" statementType="CALLABLE">
		{ CALL ID_DUP_CHK(#{userId, mode=IN, jdbcType=VARCHAR},
						  #{result, mode=OUT, jdbcType=NUMERIC, javaType=integer})
		}
	</select>
	
	<select id="idCheck" parameterType="hashmap" statementType="CALLABLE">
		{ CALL ID_DUP_CHK(#{userId, mode=IN, jdbcType=VARCHAR},
						  #{result, mode=OUT, jdbcType=NUMERIC, javaType=integer})
		}	
    </select>
	
	<!--  =============================== Email ===============================  -->
	
	<select id="id_check" parameterType="Member" resultType="Member">
        SELECT USERID FROM MEMBER
        WHERE EMAIL = #{userId}
    </select>
    
    <select id = "find_pass_check" parameterType="Member"
    resultType="String">
        SELECT PASSWORD FROM MEMBER
        WHERE USERID = #{userId} AND EMAIL = #{email}
    </select>
    
        <!-- 이메일 중복확인 관련 mapper-->
    <select id = "email_check" resultType="string">
        SELECT EMAIL FROM MEMBER
        WHERE EMAIL = #{email}
    </select>
    
    <select id="selectOnePassword" parameterType="string" resultType="Member">
    	SELECT * FROM MEMBER
    	WHERE USERID = #{userId}
    </select>
    
    <update id="updatePassword" parameterType="Member">
    UPDATE MEMBER 
		<set>
			PASSWORD = #{password}
		</set>
		WHERE USERID = #{userId}
    </update>
    
    <select id="selectIdFind" parameterType="Member">
    SELECT NAME FROM MEMBER
    WHERE NAME = #{name}
    </select>
    
</mapper>










